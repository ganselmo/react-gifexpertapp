{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KACd,SAAAC,GAAQ,IAAD,EACH,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX3B,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIhC,OACI,sBAAKc,UAAU,yCAAf,UAGI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCLJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECNwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAEvBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIjB,CAACpB,IAEGqB,EDZuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAOnB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAE/CoB,GAAW,mBAAGJ,UAAU,mCAAb,0BAEf,qBAAKA,UAAU,YAAf,SAIYH,EAAOJ,KAAI,SAACkB,GAER,OAAO,cAAC,EAAD,eAESA,GADCA,EAAIhB,aEQ9BiB,EAjCM,WAIjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAMA,6BAEQ4C,EAAWpB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAYA,GADNA,Y,YCvBlC8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.900d6fb2.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from \"prop-types\";\n\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handleInputChange= (e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n      \n        e.preventDefault();\n\n        if(inputValue.trim().length>2){\n            setCategories(cats=>[inputValue,...cats]);\n            setInputValue(\"\");\n        }\n        \n        \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value = {inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\n\n\nAddCategory.propTypes={\n    setCategories:PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=JpF1xxbPPzJCGuIvJodCW5NAFWEWdwYI&limit=10`\n    const res = await fetch(url);\n    const { data } = await res.json();\n\n\n    const gifs = data.map(\n        gif => {\n            return {\n                id: gif.id,\n                title: gif.title,\n                url: gif.images?.downsized_medium.url\n            }\n        }\n    )\n    // console.log(data)\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url }) => {\n\n\n    // console.log(img)\n    return (\n        <div className=\"card animate__animated animate__fadeIn\" >\n  \n\n            <img src={url} alt={title}></img>\n            <p >{title}</p>\n        </div>\n    )\n}\n","import React\n// , { useState, useEffect }\n from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n\n    const {data:images,loading} = useFetchGifs(category);\n\n\n   \n\n\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        {\n            loading && <p className=\"animate__animated animate__flase\"> Cargando...</p>\n        }\n        <div className=\"card-grid\">\n       \n\n                {\n                    images.map((img) => {\n\n                        return <GifGridItem \n                                    key={img.id} \n                                    {...img}\n                                    />\n                        \n                    }\n\n\n                    )\n                }\n          \n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category).then(imgs=>\n\n            setState({\n                data:imgs,\n                loading:false\n            })\n            \n        );\n    }, [category])\n\n    return state;\n\n}","import { useState } from \"react\";\nimport { AddCategory } from \"./AddCategory\";\nimport { GifGrid } from \"./GifGrid\";\n\nconst GifExpertApp = ()=>\n{\n\n \n    const [categories, setCategories] = useState([\"One punch\"])\n\n\n    // const handleAdd = (el)=>{\n    //     setCategories([...categories,1])\n    // } \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n            \n            {/* <button onClick={handleAdd}> Agregar </button> */}\n\n\n\n            <ol>\n                {\n                    categories.map((category)=> \n                        <GifGrid \n                            key= {category}\n                            category = {category}/> \n                    )\n                }\n            </ol>\n        </>\n        ); \n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\nimport 'animate.css';\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}